@page "/add-main-indicator-report/{UserId:int}/{Periode:int}"
@* @inject ReportMainIndicatorService _service *@
@inject NavigationManager navigator
@inject HttpClient httpClient


<div class="card">

    <div class="card-header">
        Indikator Utama Kinerja : Periode: @Periode
    </div>

    <EditForm Model="@CreateMainIndikator" FormName="CreateCreateMainIndikator" class="p-3" OnValidSubmit="Create">

        <div class="text_field mb-2 w-50">
            <label for="StrategicObjective">StrategicObjective</label>
            <InputText id="StrategicObjective" class="form-control" @bind-Value="CreateMainIndikator.StrategicObjective" />
            <ValidationMessage For="() => CreateMainIndikator.StrategicObjective" />
        </div>
        <div class="text_field mb-2 w-50">
            <label for="KPI">KPI</label>
            <InputText id="KPI" class="form-control" @bind-Value="CreateMainIndikator.KPI" />
            <ValidationMessage For="() => CreateMainIndikator.KPI" />
        </div>
        <div class="text_field mb-2 w-50">
            <label for="UnitOfMeasurement">UnitOfMeasurement</label>
            <InputText id="UnitOfMeasurement" class="form-control" @bind-Value="CreateMainIndikator.UnitOfMeasurement" />
            <ValidationMessage For="() => CreateMainIndikator.UnitOfMeasurement" />
        </div>
        <div class="text_field mb-2 w-50">
            <label for="Bobot">Bobot</label>
            <InputNumber id="Bobot" class="form-control" @bind-Value="CreateMainIndikator.Bobot" />
            <ValidationMessage For="() => CreateMainIndikator.Bobot" />
        </div>
        <div class="text_field mb-2 w-50">
            <label for="Title">Title</label>
            <InputSelect id="Title" class="form-control" @bind-Value="CreateMainIndikator.Polarisasi">
                <option value="">--Polarisasi--</option>
                @foreach (var pola in Values)
                {
                    <option value="@pola">@pola</option>
                }
            </InputSelect>
            <ValidationMessage For="() => CreateMainIndikator.Polarisasi" />
        </div>
        <div class="text_field mb-2 w-50 ">
            <label for="Target">Target</label>
            <InputNumber id="Target" class="form-control" @bind-Value="CreateMainIndikator.Target" />
            <ValidationMessage For="() => CreateMainIndikator.Target" />
        </div>
        <div class="text_field mb-2  w-50">
            <label for="Aktual">Aktual</label>
            <InputNumber id="Aktual" class="form-control" @bind-Value="CreateMainIndikator.Aktual" />
            <ValidationMessage For="() => CreateMainIndikator.Aktual" />
        </div>

        <DataAnnotationsValidator />

        <button type="submit" class="btn btn-primary mb-1">Save</button>
    </EditForm>

</div>
<button type="submit" class="btn btn-primary mt-2" @onclick="() => Back()">Back</button>


@code {
    [Parameter]
    public int UserId { get; set; }
    [Parameter]
    public int Periode { get; set; }
    [SupplyParameterFromForm(FormName = "Create")]
    private MainIndikatorViewModel CreateMainIndikator { get; set; } = new();
    private string ErrorMessage { get; set; }

    private List<string> Values = new List<string>
    {
        "Maximum",
        "Minimum",
        "Stabilize"
    };


    private async Task Create()
    {
        var url = $"https://localhost:7058/InsertMainIndicator/{UserId}/{Periode}";
        var response = await httpClient.PostAsJsonAsync(url, CreateMainIndikator);

        if (response.IsSuccessStatusCode)
        {
            navigator.NavigateTo("/indikatorutamakerja");
        }
        else
        {
            ErrorMessage = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Error: " + ErrorMessage);
        }

    }

    private void Back()
    {
        navigator.NavigateTo("/indikatorutamakerja");
    }

}

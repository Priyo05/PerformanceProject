@page "/indikatorutamakerja"
@inject EmployeeService employeeService
@inject ReportService reportService
@rendermode InteractiveServer


<div class="card">
    <div class="card-header">
        Masukan Employee
    </div>
    <EditForm Model="searchViewModel" FormName="Check" OnValidSubmit="CheckUser" class="form-control">
        <div class="row">
            <div class="col-md-3">
                <div class="text_field mb-2">
                    <label for="name">name</label>
                    <InputText id="name" class="form-control" @bind-Value="searchViewModel.Name" />
                    <ValidationMessage For="() => searchViewModel.Name" />
                </div>
            </div>
            <div class="col-md-3">
                <div class="text_field mb-2">
                    <label for="NIK">NIK</label>
                    <InputText id="NIK" class="form-control" @bind-Value="searchViewModel.NIK" />
                    <ValidationMessage For="() => searchViewModel.NIK" />
                </div>
            </div>
            <div class="col-md-3">
                <div class="text_field mb-2">
                    <label for="department">Department</label>
                    <InputText id="department" class="form-control" @bind-Value="searchViewModel.Department" />
                    <ValidationMessage For="() => searchViewModel.Department" />
                </div>
            </div>
            <div class="col-md-3">
                <div class="text_field mb-2">
                    <label for="periode">Periode</label>
                    <InputNumber id="periode" class="form-control" @bind-Value="searchViewModel.Periode" />
                    <ValidationMessage For="() => searchViewModel.Periode" />
                </div>
            </div>
        </div>
        <DataAnnotationsValidator />
        @* <ValidationSummary /> *@
        <button type="submit" class="btn btn-primary mb-1">Search</button>
    </EditForm>
</div>

@if (isUserChecked)
{
    @if (userExists)
    {
        @if (reportExists)
        {
            <MainIndicatorTable UserId="userid" Periode="searchViewModel.Periode" />
        }
        else if (isReportChecked)
        {
            <div class="alert alert-danger mt-3">
                @errorMessage
            </div>
            <button class="btn btn-primary" @onclick="CreateReportFirst">Buat Report</button>
        }
    }
    else
    {
        <div class="alert alert-danger mt-3">
            @errorMessage
        </div>
    }

}



@code {
    [SupplyParameterFromForm(FormName = "Check")]
    public EmployeeSearchViewModel searchViewModel { get; set; } = new();

    private int userid { get; set; }
    private int periode { get; set; }
    private bool userExists { get; set; }
    private bool reportExists { get; set; }
    private bool isUserChecked { get; set; }
    private bool isReportChecked { get; set; }
    private string? errorMessage { get; set; }

    private void CheckUser()
    {
        try
        {
            var user = employeeService.GetUser(searchViewModel.Name, searchViewModel.NIK, searchViewModel.Department);
            isUserChecked = true;

            if (user != null)
            {
                userExists = true;
                userid = user.UserId;
                CheckReport();
            }
            else
            {
                userExists = false;
            }
        }
        catch (Exception ex)
        {
            isUserChecked = true;
            userExists = false;
            errorMessage = ex.Message;
        }
        StateHasChanged();
    }

    private void CheckReport()
    {
        try
        {
            isReportChecked = true;
            var mainReport = reportService.GetMainIndicatorReport(userid, searchViewModel.Periode);

            reportExists = mainReport != null;
        }
        catch (Exception ex)
        {
            reportExists = false;
            errorMessage = ex.Message;
        }
        StateHasChanged();
    }

    private void CreateReportFirst()
    {
        Console.WriteLine("inidalam crearetp reksddas");
        reportService.CreateReport(userid, searchViewModel.Periode);
        reportExists = true;
        CheckReport();
        StateHasChanged();
    }

}
